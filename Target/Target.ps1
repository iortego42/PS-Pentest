
$TargetDomain = "init"
$TargetIp = "init"
$TargetIpFilename=".targetip.txt"
$TargetDomainFilename=".targetdn.txt"
#$Targets

function Set-TargetIp {
    param (
        [Parameter(Mandatory, HelpMessage = "Please, provide a valid Ip Address")] [IPAddress]$TargetIp,
        [switch] $SetLocalTargetIp
    )
    $TargetIpFile = "$env:HOME/.local/$TargetIpFilename"
    if ($SetLocalTargetIp)
    {
        $TargetIpFile = "./$TargetIpFilename"
    }
    Write-Output $TargetIp.IPAddressToString | Out-File $TargetIpFile 
}
Set-Alias sti Set-TargetIp

function Set-TargetDomain {
    param (
        [Parameter(Mandatory, HelpMessage = "Please, provide a valid Domain")]
        $TargetDomain,
        [switch] 
        $SetLocalTargetDomain
    )
    $TargetDomainFile = "$env:HOME/.local/$TargetDomainFilename"
    if ($SetLocalTargetDomain)
    {
        $TargetDomainFile = "./$TargetDomainFilename"
    }
    Write-Output $TargetDomain | Out-File $TargetDomainFile 
}
Set-Alias std Set-TargetDomain

function Clear-TargetIp {
    $TargetIpFile = "$env:HOME/.local/.targetip.txt"
    Write-Output '' | Out-File $TargetIpFile
}
Set-Alias cti Clear-TargetIp

function Clear-TargetDomain {
    $TargetDomainFile = "$env:HOME/.local/.targetdn.txt"
    Write-Output '' | Out-File $TargetDomainFile
}
Set-Alias ctd Clear-TargetDomain

# function Set-Target {
#     param (
#         [Parameter(HelpMessage = "Please, provide a valid Ip Address")] $ 
#     )
    
# }

